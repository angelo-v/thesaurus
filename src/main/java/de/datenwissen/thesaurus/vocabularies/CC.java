package de.datenwissen.thesaurus.vocabularies;

/* CVS $Id: $ */
 
import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;
 
/**
 * Vocabulary definitions from cc.rdf 
 * @author Auto-generated by schemagen on 29 Jul 2010 15:29 
 */
public class CC {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://creativecommons.org/ns#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    public static final Property attributionName = m_model.createProperty( "http://creativecommons.org/ns#attributionName" );
    
    public static final Property attributionURL = m_model.createProperty( "http://creativecommons.org/ns#attributionURL" );
    
    public static final Property deprecatedOn = m_model.createProperty( "http://creativecommons.org/ns#deprecatedOn" );
    
    public static final Property jurisdiction = m_model.createProperty( "http://creativecommons.org/ns#jurisdiction" );
    
    public static final Property legalcode = m_model.createProperty( "http://creativecommons.org/ns#legalcode" );
    
    public static final Property license = m_model.createProperty( "http://creativecommons.org/ns#license" );
    
    public static final Property morePermissions = m_model.createProperty( "http://creativecommons.org/ns#morePermissions" );
    
    public static final Property permits = m_model.createProperty( "http://creativecommons.org/ns#permits" );
    
    public static final Property prohibits = m_model.createProperty( "http://creativecommons.org/ns#prohibits" );
    
    public static final Property requires = m_model.createProperty( "http://creativecommons.org/ns#requires" );
    
    /** <p>the legal jurisdiction of a license</p> */
    public static final Resource Jurisdiction = m_model.createResource( "http://creativecommons.org/ns#Jurisdiction" );
    
    /** <p>a set of requests/permissions to users of a Work, e.g. a copyright license, 
     *  the public domain, information for distributors</p>
     */
    public static final Resource License = m_model.createResource( "http://creativecommons.org/ns#License" );
    
    /** <p>an action that may or may not be allowed or desired</p> */
    public static final Resource Permission = m_model.createResource( "http://creativecommons.org/ns#Permission" );
    
    /** <p>something you may be asked not to do</p> */
    public static final Resource Prohibition = m_model.createResource( "http://creativecommons.org/ns#Prohibition" );
    
    /** <p>an action that may or may not be requested of you</p> */
    public static final Resource Requirement = m_model.createResource( "http://creativecommons.org/ns#Requirement" );
    
    /** <p>a potentially copyrightable work</p> */
    public static final Resource Work = m_model.createResource( "http://creativecommons.org/ns#Work" );
    
    /** <p>credit be given to copyright holder and/or author</p> */
    public static final Resource Attribution = m_model.createResource( "http://creativecommons.org/ns#Attribution" );
    
    /** <p>exercising rights for commercial purposes</p> */
    public static final Resource CommercialUse = m_model.createResource( "http://creativecommons.org/ns#CommercialUse" );
    
    /** <p>derivative and combined works must be licensed under specified terms, similar 
     *  to those on the original work</p>
     */
    public static final Resource Copyleft = m_model.createResource( "http://creativecommons.org/ns#Copyleft" );
    
    /** <p>distribution of derivative works</p> */
    public static final Resource DerivativeWorks = m_model.createResource( "http://creativecommons.org/ns#DerivativeWorks" );
    
    /** <p>distribution, public display, and publicly performance</p> */
    public static final Resource Distribution = m_model.createResource( "http://creativecommons.org/ns#Distribution" );
    
    /** <p>use in a non-developing country</p> */
    public static final Resource HighIncomeNationUse = m_model.createResource( "http://creativecommons.org/ns#HighIncomeNationUse" );
    
    /** <p>derivative works must be licensed under specified terms, with at least the 
     *  same conditions as the original work; combinations with the work may be licensed 
     *  under different terms</p>
     */
    public static final Resource LesserCopyleft = m_model.createResource( "http://creativecommons.org/ns#LesserCopyleft" );
    
    /** <p>copyright and license notices be kept intact</p> */
    public static final Resource Notice = m_model.createResource( "http://creativecommons.org/ns#Notice" );
    
    /** <p>making multiple copies</p> */
    public static final Resource Reproduction = m_model.createResource( "http://creativecommons.org/ns#Reproduction" );
    
    /** <p>derivative works be licensed under the same terms or compatible terms as the 
     *  original work</p>
     */
    public static final Resource ShareAlike = m_model.createResource( "http://creativecommons.org/ns#ShareAlike" );
    
    /** <p>permits commercial derivatives, but only non-commercial distribution</p> */
    public static final Resource Sharing = m_model.createResource( "http://creativecommons.org/ns#Sharing" );
    
    /** <p>source code (the preferred form for making modifications) must be provided 
     *  when exercising some rights granted by the license.</p>
     */
    public static final Resource SourceCode = m_model.createResource( "http://creativecommons.org/ns#SourceCode" );
    
}
